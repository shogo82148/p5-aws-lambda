name: Build Docker Images

# to follow lambci/lambda
on:
  schedule:
    - cron: "19 14 * * 1"
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        run: |
          printenv PASSWORD | docker login -u "$USERNAME" --password-stdin
        env:
          USERNAME: ${{ secrets.username }}
          PASSWORD: ${{ secrets.password }}

      - name: Configure AWS Credentials
        uses: fuller-inc/actions-aws-assume-role@v1
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::445285296882:role/lambda-perl5-runtime-ecr-DeploymentRole-199JZ5SP862Q0
          role-session-tagging: true

      - name: Login to ECR Public Registry
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/shogo82148

      - name: Login to ghcr.io
        run: |
          printenv PASSWORD | docker login --username "$USERNAME" --password-stdin ghcr.io
        env:
          USERNAME: ${{ github.repository_owner }}
          PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v4
      - name: restore state
        run: |
          aws s3 cp s3://shogo82148-lambda-perl-runtime-state/state.json author/state.json || true

      - uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: '5.34'
      - name: Build and Publish Docker Images
        run: ./author/upload-docker-images.pl build

      - name: save state
        run: |
          aws s3 cp author/state.json s3://shogo82148-lambda-perl-runtime-state/state.json

      - name: docker logout
        run: |
          docker logout
          docker logout public.ecr.aws/shogo82148
          docker logout ghcr.io
        if: always()
